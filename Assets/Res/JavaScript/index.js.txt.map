{"version":3,"file":"index.js.txt","sources":["../../../TsProj/src/component/component-base.ts","../../../TsProj/src/component/component-info-mgr.ts","../../../TsProj/src/component/component-decoration.ts","../../../TsProj/src/component/component-inst-mgr.ts","../../../TsProj/src/UserBehaviour1.ts","../../../TsProj/src/UserBehaviour2.ts","../../../TsProj/src/SystemBehaviour1.ts","../../../TsProj/src/SystemBehaviour2.ts","../../../TsProj/src/index.ts"],"sourcesContent":["import { Base } from \"csharp\";\r\nimport { ComponentInfo, PropertyInfo } from \"./component-info-mgr\";\r\n\r\n/**\r\n * 组件接口，回调时机同unity的mono behaviour\r\n */\r\nexport abstract class Component {\r\n    private BindProperty(instanceId: number): void {\r\n        console.log(`instanceId = ${instanceId}`);\r\n        this.behaviour = Base.Runtime.JsBehaviourMgr.Instance.Get(instanceId);\r\n        this.compInfo = (this as any)[\"componentInfo\"] as ComponentInfo;\r\n        for (let propName in this.compInfo.properties) {\r\n            const propInfo = this.compInfo.properties[propName];\r\n            (this as any)[propInfo.name] = this.GetPropertyValue(propInfo);\r\n        }\r\n    }\r\n\r\n    private UnbindProperty(): void {\r\n        for (let propName in this.compInfo.properties) {\r\n            const propInfo = this.compInfo.properties[propName];\r\n            (this as any)[propInfo.name] = undefined;\r\n        }\r\n    }\r\n\r\n    private GetPropertyValue(propInfo: PropertyInfo): any {\r\n        switch (propInfo.type) {\r\n            case \"System.Single\":\r\n                return propInfo.isArray ?\r\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetFloatList(propInfo.name)) :\r\n                    this.behaviour.JsComponentProp.GetFloat(propInfo.name);\r\n            case \"System.String\":\r\n                return propInfo.isArray ?\r\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetStringList(propInfo.name)) :\r\n                    this.behaviour.JsComponentProp.GetString(propInfo.name);\r\n            case \"System.Int32\":\r\n            case \"System.UInt32\":\r\n            case \"System.Int16\":\r\n            case \"System.UInt16\":\r\n                return propInfo.isArray ?\r\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetIntList(propInfo.name)) :\r\n                    this.behaviour.JsComponentProp.GetInt(propInfo.name);\r\n            case \"System.Int64\":\r\n            case \"System.UInt64\":\r\n                return propInfo.isArray ?\r\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetLongList(propInfo.name)) :\r\n                    this.behaviour.JsComponentProp.GetLong(propInfo.name);\r\n            case \"UnityEngine.Vector2\":\r\n                return propInfo.isArray ?\r\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetVector2List(propInfo.name)) :\r\n                    this.behaviour.JsComponentProp.GetVector2(propInfo.name);\r\n            case \"UnityEngine.Vector3\":\r\n                return propInfo.isArray ?\r\n                    this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetVector3List(propInfo.name)) :\r\n                    this.behaviour.JsComponentProp.GetVector3(propInfo.name);\r\n            default:\r\n                if (this.behaviour.JsComponentProp.IsUEObject(propInfo.type)) {\r\n                    return propInfo.isArray ?\r\n                        this.ConvertTypedListToArray(this.behaviour.JsComponentProp.GetUEObjectList(propInfo.name)) :\r\n                        this.behaviour.JsComponentProp.GetUEObject(propInfo.name);\r\n                }\r\n                return undefined;\r\n        }\r\n    }\r\n\r\n    private ConvertTypedListToArray(list: any): any[] {\r\n        let array: any[] = [];\r\n        if (list?.Data == null) {\r\n            return array;\r\n        }\r\n        for (let i = 0; i < list?.Data.Count; ++i) {\r\n            array.push(list.Data.get_Item(i));\r\n        }\r\n        return array;\r\n    }\r\n\r\n    private compInfo: ComponentInfo;\r\n    private behaviour: Base.Runtime.JsBehaviour;\r\n}\r\n","/**\r\n * 组件信息管理\r\n */\r\nclass ComponentInfoMgr {\r\n    /**\r\n     * 获取指定名字的组件信息JSON字符串，名字为空时返回所有组件信息\r\n     * @param componentName 组件名字\r\n     * @returns json格式的组件信息字符串\r\n     */\r\n    public getJsonString(componentName?: string): string {\r\n        if (!componentName) {\r\n            return JSON.stringify(this.componentInfos);\r\n        }\r\n        const componentInfo = this.componentInfos[componentName];\r\n        if (!componentInfo) {\r\n            return null;\r\n        }\r\n        return JSON.stringify(componentInfo);\r\n    }\r\n\r\n    /**\r\n     * 获取指定名字的组件信息，名字不能为空\r\n     * @param componentName 组件名\r\n     * @returns 组件信息\r\n     */\r\n    public getComponentInfo(componentName: string): ComponentInfo {\r\n        return this.componentInfos[componentName];\r\n    }\r\n\r\n    /**\r\n     * 注册组件\r\n     * @param name 组件名字\r\n     * @param cls 组件类\r\n     * @param path 组件在编辑器的inspector面板显示的索引路径\r\n     */\r\n    public registerComponent<T extends Constructor>(name: string, cls?: T, path?: string) {\r\n        let compInfo = this.componentInfos[name];\r\n        if (!compInfo) {\r\n            compInfo = {\r\n                name,\r\n                path,\r\n                properties: {}\r\n            }\r\n            this.componentInfos[name] = compInfo;\r\n        }\r\n        if (cls) {\r\n            this.componentClass[name] = cls;\r\n        }\r\n        compInfo.path = compInfo.path || path;\r\n    }\r\n\r\n    /**\r\n     * 向组件中添加组件的属性信息\r\n     * @param component 组件名字\r\n     * @param propInfo 组件信息\r\n     */\r\n    public addPropertyToComponent(component: string, propInfo: PropertyInfo) {\r\n        this.registerComponent(component);\r\n        const comp = this.componentInfos[component];\r\n        comp.properties[propInfo.name] = propInfo;\r\n    }\r\n\r\n    /**\r\n     * 查找组件构造函数\r\n     * @param component 组件名\r\n     * @returns 组件构造函数\r\n     */\r\n    public findComponentConstructor(component: string): Constructor {\r\n        return this.componentClass[component];\r\n    }\r\n\r\n    private componentClass: { [key: string]: Constructor } = {};\r\n    private componentInfos: ComponentInfos = {};\r\n}\r\n\r\n/**\r\n * 组件集合，由组件名索引\r\n */\r\n export type ComponentInfos = {\r\n    [key: string]: ComponentInfo\r\n};\r\n\r\n/**\r\n * 组件信息\r\n */\r\nexport type ComponentInfo = {\r\n    name: string,\r\n    path: string,\r\n    properties: { [key: string]: PropertyInfo },\r\n};\r\n\r\n/**\r\n * 组件的属性信息\r\n */\r\nexport type PropertyInfo = {\r\n    name: string;\r\n    type: string;\r\n    isArray?: boolean;\r\n    editable?: boolean;\r\n}\r\n\r\n\r\nexport type Constructor = new (...args:any[]) => any;\r\n\r\nexport const compInfoMgr = new ComponentInfoMgr();\r\n","import { $typeof } from \"puerts\";\r\nimport { compInfoMgr, Constructor, PropertyInfo } from \"./component-info-mgr\"\r\n\r\n/**\r\n * 组件类修饰器工厂，应用在非静态类上\r\n * @param componentPath 组件在编辑器的inspector面板显示的索引路径 \r\n * @returns 组件修饰器\r\n */\r\nexport function component(componentPath?: string): Function {\r\n    return function(constructor: Function) {\r\n        compInfoMgr.registerComponent(constructor.name, constructor as Constructor, componentPath);\r\n        constructor.prototype.componentInfo = compInfoMgr.getComponentInfo(constructor.name);\r\n    }\r\n}\r\n\r\n/**\r\n * 组件属性修改器工厂，应用在组件类的非静态变量上\r\n * @param option 属性选项\r\n * @returns 组件属性修饰器\r\n */\r\nexport function property(option: PropertyOption): Function;\r\n/**\r\n * 组件属性修改器工厂，应用在组件类的非静态变量上\r\n * @param type 属性类型\r\n * @returns 组件属性修饰器\r\n */\r\nexport function property<T extends Constructor>(type: T): Function;\r\n/**\r\n * 组件属性修改器工厂，应用在组件类的非静态变量上\r\n * @param type 属性类型，传入类型数组，表示当前属性类型是数组\r\n * @returns 组件属性修饰器\r\n */\r\nexport function property<T extends Constructor>(type: T[]): Function;\r\nexport function property(arg: any): Function {\r\n    return function(target: any, propertyKey: string) {\r\n        let propInfo: PropertyInfo = null;\r\n        if (typeof arg === 'function') {\r\n            propInfo = {\r\n                name: propertyKey,\r\n                type: $typeof((arg as Constructor)).FullName,\r\n                isArray: false,\r\n            };\r\n        }\r\n        else if (Array.isArray(arg)) {\r\n            propInfo = {\r\n                name: propertyKey,\r\n                type: $typeof((arg as Constructor[])[0]).FullName,\r\n                isArray: true,\r\n            };\r\n        }\r\n        else {\r\n            const isArray = Array.isArray(arg.type);\r\n            propInfo = {\r\n                name: propertyKey,\r\n                type: isArray ? $typeof((arg.type as Constructor[])[0]).FullName : $typeof((arg.type as Constructor)).FullName,\r\n                isArray: (arg.isArray === null || arg.isArray === undefined) ? isArray : arg.isArray,\r\n                editable: arg.editable\r\n            };\r\n        }\r\n        compInfoMgr.addPropertyToComponent(target.constructor.name, propInfo);\r\n    }\r\n}\r\n\r\ntype PropertyOption = {\r\n    type: Constructor | Constructor[];\r\n    isArray?: boolean;\r\n    editable?: boolean;\r\n}\r\n\r\ntype ArrayElement<ArrayType extends readonly unknown[]> = \r\n  ArrayType extends readonly (infer ElementType)[] ? ElementType : never;","import { Component } from \"./component-base\";\r\nimport { compInfoMgr } from \"./component-info-mgr\";\r\n\r\nclass ComponentInstMgr {\r\n    /**\r\n     * 给定一个组件类名，创建对应的实例\r\n     * @param className 组件类名\r\n     * @returns 返回实例ID\r\n     */\r\n    public newComponent(className: string): number {\r\n        const componentCls = compInfoMgr.findComponentConstructor(className);\r\n        if (!componentCls) {\r\n            console.error(`cannot find component constructor ${className}.`);\r\n            return InvalidComponentID;\r\n        }\r\n        const componentId = ++this.componentIdSeed;\r\n        this.components[componentId] = new componentCls();\r\n        return componentId;\r\n    }\r\n\r\n    /**\r\n     * 删除一个组件实例\r\n     * @param componentId 组件实例ID\r\n     */\r\n    public delComponent(componentId: number) {\r\n        delete this.components[componentId];\r\n    }\r\n\r\n    /**\r\n     * 获取组件实例上的一个方法名\r\n     * @param componentId 组件实例ID\r\n     * @param methodName 方法名\r\n     * @returns 绑定组件实例后的方法\r\n     */\r\n    public getComponentMethod(componentId: number, methodName: string): Function {\r\n        const componentInst = this.components[componentId];\r\n        if (!componentInst) {\r\n            console.error(`cannot find component with id ${componentId}.`);\r\n            return undefined;\r\n        }\r\n        const method = (componentInst as any)[methodName] as Function;\r\n        if (!method) {\r\n            return undefined;\r\n        }\r\n        return method.bind(componentInst);\r\n    }\r\n\r\n    private componentIdSeed = 0;\r\n    private components: { [key: number]: Component } = {};\r\n}\r\n\r\nexport const InvalidComponentID = -1;\r\n\r\nexport const compInstMgr = new ComponentInstMgr;","import { Component } from \"./component/component-base\";\r\nimport { component } from \"./component/component-decoration\";\r\n\r\n@component(\"User\")\r\nclass UserBehaviour1 extends Component {\r\n}","import { Component } from \"./component/component-base\";\r\nimport { component } from \"./component/component-decoration\";\r\n\r\n@component(\"User\")\r\nclass UserBehaviour2 extends Component {\r\n}","import { Component } from \"./component/component-base\";\r\nimport { component } from \"./component/component-decoration\";\r\n\r\n@component(\"System\")\r\nclass SystemBehaviour1 extends Component {\r\n}","import { Component } from \"./component/component-base\";\r\nimport { component } from \"./component/component-decoration\";\r\n\r\n@component(\"System\")\r\nclass SystemBehaviour2 extends Component {\r\n}","import { System, UnityEngine } from \"csharp\";\r\nimport { Component } from \"./component/component-base\";\r\nimport { component, property } from \"./component/component-decoration\";\r\nexport * from \"./component/component-info-mgr\";\r\nexport * from \"./component/component-inst-mgr\";\r\nexport * from \"./UserBehaviour1\";\r\nexport * from \"./UserBehaviour2\";\r\nexport * from \"./SystemBehaviour1\";\r\nexport * from \"./SystemBehaviour2\";\r\n\r\n/**\r\n * 使用component修饰器定义TestBehaviour为Js组件\r\n */\r\n@component()\r\nclass TestBehaviour extends Component {\r\n    /**\r\n     * 使用property修饰器定义需要在Inspector上显示的属性及其类型\r\n     */\r\n    @property(UnityEngine.GameObject)\r\n    prop1: UnityEngine.GameObject;\r\n\r\n    /**\r\n     * editable未实现，仅演示功能扩展模式\r\n     */\r\n    @property({\r\n        type: System.Single,\r\n        editable: true\r\n    })\r\n    prop2: number;\r\n\r\n    /**\r\n     * 数组的几种定义形式\r\n     */\r\n    @property({\r\n        type: UnityEngine.GameObject,\r\n        isArray: true\r\n    })\r\n    prop3: UnityEngine.GameObject[];\r\n    @property([UnityEngine.Vector3])\r\n    prop4: UnityEngine.Vector3[];\r\n\r\n\r\n    @property(UnityEngine.Camera)\r\n    prop6: UnityEngine.Camera;\r\n\r\n    @property(UnityEngine.Vector3)\r\n    prop7: UnityEngine.Vector3;\r\n\r\n    public Awake() {\r\n        console.log(\"Awake\");\r\n        console.log(`prop1 = ${this.prop1}`);\r\n        console.log(`prop2 = ${this.prop2}`);\r\n        console.log(`prop3 = ${this.prop3}`);\r\n        console.log(`prop4 = ${this.prop4.length}`);\r\n        //console.log(`prop5 = ${this.prop5}`);\r\n        console.log(`prop6 = ${this.prop6}`);\r\n        console.log(`prop7 = {${this.prop7.x}, ${this.prop7.y}, ${this.prop7.z}}`);\r\n    }\r\n    \r\n    public Start() {\r\n        console.log(\"Start\");\r\n    }\r\n\r\n    public OnEnable() {\r\n        console.log(\"OnEnable\");\r\n    }\r\n\r\n    public OnDisable() {\r\n        console.log(\"OnDisable\");\r\n    }\r\n\r\n    public OnDestroy() {\r\n        console.log(\"OnDestroy\");\r\n    }\r\n}\r\n"],"names":["Base","$typeof","UnityEngine","System"],"mappings":"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"}